---
name: Release And Publish Docker Artifact

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        default: '1.0.0'
        type: string
        description: 'Release version (e.g., 1.0.0)'
      dry-run:
        required: false
        type: boolean
        default: false
        description: 'Dry run'

permissions:
  contents: write
  packages: write

jobs:
  check-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Input parameters
        run: |
          echo "Version: ${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY

      - name: Check if tag exists
        id: check_tag
        uses: netcracker/qubership-workflow-hub/actions/tag-checker@c07a5bf430a3c0120e189e6b54061b9bb8dde362
        with:
          tag: 'v${{ github.event.inputs.version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output result
        run: |
          echo "Tag exists: ${{ steps.check_tag.outputs.exists }}"
          echo "Tag name: v${{ github.event.inputs.version }}"

      - name: Fail if tag exists
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          echo "Tag already exists: v${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "Tag already exists: v${{ github.event.inputs.version }}"
          exit 1

  tag:
    needs: [check-tag]
    uses: netcracker/qubership-workflow-hub/.github/workflows/tag-creator.yml@c07a5bf430a3c0120e189e6b54061b9bb8dde362
    with:
      tag-name: v${{ github.event.inputs.version }}
      ref: ${{ github.ref }}

  build:
    needs: [tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: v${{ github.event.inputs.version }}

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          server-id: github
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Build JAR artifact
        run: mvn clean package -DskipTests
        working-directory: dbaas
        env:
          MAVEN_USERNAME: ${{ secrets.maven-username }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: dbaas
          path: |
            dbaas/dbaas-aggregator/target/lib
            dbaas/dbaas-aggregator/target/dbaas-aggregator-*-runner.jar
          if-no-files-found: error
          retention-days: 1
  
      - name: Build and Publish Docker Image
        uses: netcracker/qubership-workflow-hub/actions/docker-action@v1.0.3
        with:
          ref: v${{ inputs.version }}
          download-artifact: true
          download-artifact-path: ./artifacts
          component: |
            [
              {
                "name": "default", 
                "file": "dbaas/Dockerfile", 
                "context": "./artifacts/dbaas"
              }
            ]
          platforms: linux/amd64,linux/arm64
          dry-run: ${{ github.event.inputs.dry-run == 'true' }}            
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
      
      - name: Build and Publish Validation Docker Image
        uses: netcracker/qubership-workflow-hub/actions/docker-action@v1.0.3
        with:
          ref: v${{ inputs.version }}
          component: |
            [
              {
                "name": "default", 
                "file": "validation-image/Dockerfile", 
                "context": "./validation-image"
              }
            ]
          platforms: linux/amd64,linux/arm64              
          dry-run: ${{ github.event.inputs.dry-run == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    

  github-release:
    needs: [build]
    uses: netcracker/qubership-workflow-hub/.github/workflows/release-drafter.yml@c07a5bf430a3c0120e189e6b54061b9bb8dde362
    with:
      version: ${{ github.event.inputs.version }}
      publish: false
