name: Build on Commit

on:
  - push

jobs:
  prepare-variables:
    runs-on: ubuntu-latest
    steps:
      - id: tag_build_number
        run: echo "tag=$(echo ${{github.ref_name}} | tr -cs 'a-zA-Z0-9' '-')$(date +'%Y%m%d%H%M%S')-${{ github.run_number }}" >> $GITHUB_OUTPUT
      - id: tag_snapshot
        run: echo "tag=$(echo ${{github.ref_name}} | tr -cs 'a-zA-Z0-9' '-')snapshot" >> $GITHUB_OUTPUT
      - id: repo
        run: echo "repo=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
    outputs:
      tag_build_number: ${{ steps.tag_build_number.outputs.tag }}
      tag_snapshot: ${{ steps.tag_snapshot.outputs.tag }}
      repo: ${{ steps.repo.outputs.repo }}

  build:
    runs-on: ubuntu-latest
    needs: prepare-variables
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          server-id: github
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.gpg-private-key }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Build and deploy jar to Maven Central
        run: mvn --batch-mode deploy -Dgpg.skip=true org.sonarsource.scanner.maven:sonar-maven-plugin:${{ vars.SONAR_PLUGIN_VERSION }}:sonar -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }} -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }} -Dsonar.host.url=${{ vars.SONAR_HOST_URL }}
        env:
          MAVEN_USERNAME: ${{ secrets.maven-username }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.gpg-passphrase }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ needs.prepare-variables.outputs.repo }}:${{ needs.prepare-variables.outputs.tag_build_number }}
            ghcr.io/${{ needs.prepare-variables.outputs.repo }}:${{ needs.prepare-variables.outputs.tag_snapshot }}
          platforms: linux/amd64
