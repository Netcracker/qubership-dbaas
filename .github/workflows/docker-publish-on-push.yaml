---
name: Publish Docker Artifact On Push

on:
  push

permissions:
  contents: write
  packages: write

jobs:
  prepare-variables:
    runs-on: ubuntu-latest
    steps:
      - id: tag_build_number
        run: echo "tag=$(echo ${{github.ref_name}} | tr -cs 'a-zA-Z0-9' '-')$(date +'%Y%m%d%H%M%S')-${{ github.run_number }}" >> $GITHUB_OUTPUT
      - id: tag_snapshot
        run: echo "tag=$(echo ${{github.ref_name}} | tr -cs 'a-zA-Z0-9' '-')snapshot" >> $GITHUB_OUTPUT
      - id: main_artifact
        run: echo "main_artifact=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
    outputs:
      tag_build_number: ${{ steps.tag_build_number.outputs.tag }}
      tag_snapshot: ${{ steps.tag_snapshot.outputs.tag }}
      main_artifact: ${{ steps.main_artifact.outputs.main_artifact }}
      validation_image_artifact: ${{ steps.main_artifact.outputs.main_artifact }}-validation-image

  build:
    runs-on: ubuntu-latest
    needs: prepare-variables
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          server-id: github
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Build JAR artifact
        run: mvn clean package -DskipTests
        working-directory: dbaas
        env:
          MAVEN_USERNAME: ${{ secrets.maven-username }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.prepare-variables.outputs.main_artifact }}
          path: dbaas/dbaas-aggregator/target
          if-no-files-found: error
          retention-days: 1

  docker-build-publish:
    needs: [ prepare-variables, build]
    uses: netcracker/qubership-workflow-hub/.github/workflows/docker-publish.yml@c07a5bf430a3c0120e189e6b54061b9bb8dde362
    with:
      artifact-id: ${{ needs.prepare-variables.outputs.main_artifact }}
      download-artifact: true
      platforms: linux/amd64,linux/arm64
      component: '[{"name": "default", "file": "dbaas/Dockerfile", "context": "."}]'
      tags: |
        ${{ needs.prepare-variables.outputs.tag_build_number }}
        ${{ needs.prepare-variables.outputs.tag_snapshot }}


  docker-build-publish-validation-image:
    needs: [prepare-variables]
    uses: netcracker/qubership-workflow-hub/.github/workflows/docker-publish.yml@c07a5bf430a3c0120e189e6b54061b9bb8dde362
    with:
      artifact-id: ${{ needs.prepare-variables.outputs.validation_image_artifact }}
      platforms: linux/amd64,linux/arm64
      component: '[{"name": "default", "file": "validation-image/Dockerfile", "context": "validation-image"}]'      
      tags: |
        ${{ needs.prepare-variables.outputs.tag_build_number }}
        ${{ needs.prepare-variables.outputs.tag_snapshot }}